diff --git a/libgloss/config/default.mh b/libgloss/config/default.mh
index 4e7f106f9..229dd920f 100644
--- a/libgloss/config/default.mh
+++ b/libgloss/config/default.mh
@@ -4,7 +4,7 @@ NEWLIB_LDFLAGS = `if [ -d ${objroot}/newlib ]; then echo -B${objroot}/newlib/ -L
 INCLUDES = -I. -I$(srcdir)/.. -I$(objdir)/..
 # Note that when building the library, ${MULTILIB} is not the way multilib
 # options are passed; they're passed in $(CFLAGS).
-CFLAGS_FOR_TARGET = -O2 -g ${MULTILIB} ${INCLUDES} ${NEWLIB_CFLAGS}
+CFLAGS_FOR_TARGET = -O2 -g ${MULTILIB} ${INCLUDES} ${NEWLIB_CFLAGS}  -fpermissive
 LDFLAGS_FOR_TARGET = ${MULTILIB} ${NEWLIB_LDFLAGS}
 AR_FLAGS = rc
 
diff --git a/libgloss/epiphany/_isatty.c b/libgloss/epiphany/_isatty.c
index cfb1bf6e4..f05aba3c3 100644
--- a/libgloss/epiphany/_isatty.c
+++ b/libgloss/epiphany/_isatty.c
@@ -18,6 +18,7 @@
 
 #include <sys/stat.h>
 #include <errno.h>
+#include "epiphany-syscalls.h"
 
 int
 _isatty (int fd)
diff --git a/libgloss/epiphany/epiphany-syscalls.c b/libgloss/epiphany/epiphany-syscalls.c
index e6ebcee24..4c03fe291 100644
--- a/libgloss/epiphany/epiphany-syscalls.c
+++ b/libgloss/epiphany/epiphany-syscalls.c
@@ -253,7 +253,7 @@ int __attribute__ ((section ("libgloss_epiphany")))  e_raise(int signum) {
 		__asm__ __volatile__ ("wand");
 		//ilatst = 1 << WAND_IVT_N;
 		//break;
-		return;
+		return 0;
 
 	case SIG_USR1:
 		ilatst = 1 << USR_SOFT_IVT_N;
diff --git a/libgloss/epiphany/epiphany-syscalls.h b/libgloss/epiphany/epiphany-syscalls.h
index 3af1c6f7b..b46587573 100644
--- a/libgloss/epiphany/epiphany-syscalls.h
+++ b/libgloss/epiphany/epiphany-syscalls.h
@@ -35,5 +35,7 @@ int asm_open(const char* FILE, int FLAGS, int MODE);
 void asm_exit(int STATUS);
 int asm_close(int CHAN);
 int asm_syscall(void *P1, void *P2, void *P3, int SUBFUN);
+int _fstat (int, struct stat *st);
+
 
 #endif
diff --git a/libgloss/epiphany/fstat.c b/libgloss/epiphany/fstat.c
index 5a20b57f3..d126c2de8 100644
--- a/libgloss/epiphany/fstat.c
+++ b/libgloss/epiphany/fstat.c
@@ -31,6 +31,7 @@
 
 #include <sys/stat.h>
 #include <syscall.h>
+#include "epiphany-syscalls.h"
 
 
 /* ------------------------------------------------------------------------- */
@@ -44,6 +45,6 @@
 int __attribute__ ((section ("libgloss_epiphany")))
 _fstat (int fildes, struct stat *st)
 {
-  return asm_syscall (fildes, st, NULL, SYS_fstat);
+  return asm_syscall ((void *)fildes, st, NULL, SYS_fstat);
 
 }	/* _fstat () */
diff --git a/libgloss/epiphany/gettimeofday.c b/libgloss/epiphany/gettimeofday.c
index e169385ea..36f17b8b0 100644
--- a/libgloss/epiphany/gettimeofday.c
+++ b/libgloss/epiphany/gettimeofday.c
@@ -31,6 +31,7 @@
 #include <errno.h>
 #include <sys/time.h>
 #include "syscall.h"
+#include "epiphany-syscalls.h"
 
 int
 _gettimeofday (struct timeval *tp, void *tzp)
diff --git a/libgloss/epiphany/link.c b/libgloss/epiphany/link.c
index d87637e39..fd0d8b9cb 100644
--- a/libgloss/epiphany/link.c
+++ b/libgloss/epiphany/link.c
@@ -31,6 +31,7 @@
 
 #include <unistd.h>
 #include <syscall.h>
+#include "epiphany-syscalls.h"
 
 
 /* ------------------------------------------------------------------------- */
diff --git a/libgloss/epiphany/lseek.c b/libgloss/epiphany/lseek.c
index 64ffcdd28..65d7e52da 100644
--- a/libgloss/epiphany/lseek.c
+++ b/libgloss/epiphany/lseek.c
@@ -30,6 +30,7 @@
 
 #include <syscall.h>
 #include <sys/types.h>
+#include "epiphany-syscalls.h"
 
 /* ------------------------------------------------------------------------- */
 /*!Set a position in a file
@@ -43,5 +44,5 @@
 off_t __attribute__ ((section ("libgloss_epiphany")))
 _lseek (int  fildes, off_t offset, int  whence)
 {
-  return asm_syscall (fildes, offset, whence, SYS_lseek);
+  return asm_syscall ((void *)fildes, (void *)offset, (void *)whence, SYS_lseek);
 }	/* _lseek () */
diff --git a/libgloss/epiphany/stat.c b/libgloss/epiphany/stat.c
index 988f28dba..f9a3872a8 100644
--- a/libgloss/epiphany/stat.c
+++ b/libgloss/epiphany/stat.c
@@ -31,6 +31,7 @@
 
 #include <sys/stat.h>
 #include <syscall.h>
+#include "epiphany-syscalls.h"
 
 
 /* ------------------------------------------------------------------------- */
diff --git a/libgloss/epiphany/unlink.c b/libgloss/epiphany/unlink.c
index c78af284d..653f24b95 100644
--- a/libgloss/epiphany/unlink.c
+++ b/libgloss/epiphany/unlink.c
@@ -31,6 +31,7 @@
 
 #include <unistd.h>
 #include <syscall.h>
+#include "epiphany-syscalls.h"
 
 
 /* ------------------------------------------------------------------------- */
diff --git a/libgloss/fr30/syscalls.c b/libgloss/fr30/syscalls.c
index 2558556b6..36702b03d 100644
--- a/libgloss/fr30/syscalls.c
+++ b/libgloss/fr30/syscalls.c
@@ -5,6 +5,8 @@
 #include <sys/stat.h>
 #include "../syscall.h"
 
+#pragma GCC diagnostic ignored "-Wreturn-mismatch"
+
 int
 _read (file, ptr, len)
      int    file;
diff --git a/libgloss/mcore/kill.c b/libgloss/mcore/kill.c
index 833fe89d7..848668eaa 100644
--- a/libgloss/mcore/kill.c
+++ b/libgloss/mcore/kill.c
@@ -14,6 +14,8 @@
  */
 #include "glue.h"
 
+void    _exit (int __status) _ATTRIBUTE ((__noreturn__));
+
 /*
  * kill -- go out via exit...
  */
diff --git a/libgloss/mcore/putnum.c b/libgloss/mcore/putnum.c
index 10e298b95..924a1705a 100644
--- a/libgloss/mcore/putnum.c
+++ b/libgloss/mcore/putnum.c
@@ -13,6 +13,9 @@
  * they apply.
  */
 #include "glue.h"
+extern void print (char *ptr);
+
+
 
 /*
  * putnum -- print a 32 bit number in hex
diff --git a/libgloss/mcore/raise.c b/libgloss/mcore/raise.c
index e39207792..39df08414 100644
--- a/libgloss/mcore/raise.c
+++ b/libgloss/mcore/raise.c
@@ -13,6 +13,8 @@
  * they apply.
  */
 #include "glue.h"
+extern int _kill (int, int);
+extern int _getpid (void);
 
 int
 _raise (int sig)
diff --git a/libgloss/mcore/sbrk.c b/libgloss/mcore/sbrk.c
index 844958984..27cb1e74d 100644
--- a/libgloss/mcore/sbrk.c
+++ b/libgloss/mcore/sbrk.c
@@ -16,6 +16,9 @@
 #include <sys/stat.h>
 #include "glue.h"
 
+extern int _write (int, char *, int);
+
+
 caddr_t
 _sbrk (size_t incr)
 {
diff --git a/libgloss/moxie/putnum.c b/libgloss/moxie/putnum.c
index 0f7e89453..759371b8a 100644
--- a/libgloss/moxie/putnum.c
+++ b/libgloss/moxie/putnum.c
@@ -14,6 +14,8 @@
  */
 #include "glue.h"
 
+void _print (char *);
+
 /*
  * putnum -- print a 32 bit number in hex
  */
diff --git a/libgloss/moxie/sim-inbyte.c b/libgloss/moxie/sim-inbyte.c
index 1e7466a8d..3f62d64fc 100644
--- a/libgloss/moxie/sim-inbyte.c
+++ b/libgloss/moxie/sim-inbyte.c
@@ -14,6 +14,8 @@
  * they apply.
  */
 
+#include <stdlib.h>
+
 int
 inbyte ()
 {
diff --git a/libgloss/putnum.c b/libgloss/putnum.c
index c368c4136..6e1051e24 100644
--- a/libgloss/putnum.c
+++ b/libgloss/putnum.c
@@ -14,6 +14,8 @@
  */
 #include "glue.h"
 
+extern void print (char *ptr);
+
 /*
  * putnum -- print a 32 bit number in hex
  */
diff --git a/libgloss/tic6x/kill.c b/libgloss/tic6x/kill.c
index 98cd3c40e..c44c64a44 100644
--- a/libgloss/tic6x/kill.c
+++ b/libgloss/tic6x/kill.c
@@ -15,6 +15,8 @@
 #include <_ansi.h>
 #define __MYPID 1
 
+void _exit (int);
+
 /*
  * kill -- go out via exit...
  */
diff --git a/newlib/libc/reent/signalr.c b/newlib/libc/reent/signalr.c
index 863ae7400..2a33e333e 100644
--- a/newlib/libc/reent/signalr.c
+++ b/newlib/libc/reent/signalr.c
@@ -6,6 +6,8 @@
 #include <unistd.h>
 #include <_syslist.h>
 
+int _kill (pid_t, int); 
+
 /* Some targets provides their own versions of these functions.  Those
    targets should define REENTRANT_SYSCALLS_PROVIDED in TARGET_CFLAGS.  */
 
diff --git a/libgloss/cris/gensyscalls b/libgloss/cris/gensyscalls
index c36f28488..0be9bbd79 100644
--- a/libgloss/cris/gensyscalls
+++ b/libgloss/cris/gensyscalls
@@ -257,6 +257,7 @@ cat > unlink.c <<EOF
 $lui _unlink (const char *f${r}unlink (f))
 EOF
 cat > wait.c <<EOF
+$lui _getpid (void);
 $lui _wait (int *status${r}wait4 (_getpid(), status, 0, 0))
 EOF
 cat > write.c <<EOF
diff --git a/libgloss/cris/lcrt0.c b/libgloss/cris/lcrt0.c
index 48489edd3..a4f598858 100644
--- a/libgloss/cris/lcrt0.c
+++ b/libgloss/cris/lcrt0.c
@@ -27,6 +27,7 @@
    POSSIBILITY OF SUCH DAMAGE.  */
 
 #include "linunistd.h"
+#include <stdlib.h>
 #include "newlib.h"
 
 #ifdef _HAVE_INITFINI_ARRAY
@@ -99,6 +100,7 @@ extern void _Libdtors (void);
 
 extern void __init__start (void) __attribute ((weak));
 extern void __aout__ctors (void) __attribute ((weak));
+extern int main (int, char **, char **);
 
 static void start1 () __asm__ ("__start1") __attribute ((__used__));
 static void
diff --git a/libgloss/cris/outbyte.c b/libgloss/cris/outbyte.c
index 1cb686b96..48ac10f76 100644
--- a/libgloss/cris/outbyte.c
+++ b/libgloss/cris/outbyte.c
@@ -2,6 +2,7 @@
    function.  Too small and obvious to warrant a copyright notice.  */
 
 #include <stdio.h>
+#include <unistd.h>
 void
 outbyte (int ch)
 {
diff --git a/newlib/libc/search/hash_page.c b/newlib/libc/search/hash_page.c
index 9d15b0cb7..59fc81850 100644
--- a/newlib/libc/search/hash_page.c
+++ b/newlib/libc/search/hash_page.c
@@ -36,6 +36,12 @@ static char sccsid[] = "@(#)hash_page.c	8.7 (Berkeley) 8/16/94";
 #endif /* LIBC_SCCS and not lint */
 #include <sys/cdefs.h>
 
+#include <signal.h>
+#ifndef sigfillset
+int sigfillset (sigset_t *); 
+#endif
+
+
 /*
  * PACKAGE:  hashing
  *
diff --git a/libgloss/ft32/sim-inbyte.c b/libgloss/ft32/sim-inbyte.c
index 9df0e1fe4..f56890dcc 100644
--- a/libgloss/ft32/sim-inbyte.c
+++ b/libgloss/ft32/sim-inbyte.c
@@ -13,6 +13,7 @@
  * the new terms are clearly indicated on the first page of each file where
  * they apply.
  */
+#include <unistd.h>
 
 int
 inbyte ()
diff --git a/newlib/libc/stdlib/system.c b/newlib/libc/stdlib/system.c
index f30b7df80..04b285bcc 100644
--- a/newlib/libc/stdlib/system.c
+++ b/newlib/libc/stdlib/system.c
@@ -56,6 +56,10 @@ Supporting OS subroutines required: <<_exit>>, <<_execve>>, <<_fork_r>>,
 static int do_system (struct _reent *ptr, const char *s);
 #endif
 
+#if defined(HAVE_SYSTEM)
+int _system(const char *command);
+#endif
+
 int
 _system_r (struct _reent *ptr,
      const char *s)
diff --git a/libgloss/glue.h b/libgloss/glue.h
index 0a7e36db2..784fa5067 100644
--- a/libgloss/glue.h
+++ b/libgloss/glue.h
@@ -13,6 +13,7 @@
  * they apply.
  */
 #include <_ansi.h>
+#include <stdlib.h>
 
 #ifndef NULL
 #  define NULL 0
@@ -28,4 +29,6 @@ extern char _end[];                /* _end is set in the linker command file */
 /* only one prcess support, as this is OS dependant */
 #define __MYPID 1
 
+void _exit (int) __attribute ((__noreturn__));
+int outbyte (char);
 
