diff --git a/gcc/simplify-rtx.cc b/gcc/simplify-rtx.cc
index fc0d6c3ca2a..da884958944 100644
--- a/gcc/simplify-rtx.cc
+++ b/gcc/simplify-rtx.cc
@@ -1639,6 +1639,24 @@ simplify_context::simplify_unary_operation_1 (rtx_code code, machine_mode mode,
 	    }
 	}
 
+      /* CLRSB, CLZ, CTZ, POPCOUNT, and PARITY can have a different
+	 mode for their destination than their input argument and we
+	 know the result would be the same for sign or zero extended
+	 due to the limited range of the result of these operators.
+
+	 So we can just adjust the mode of the operator and return
+	 that RTX -- effectively stripping away the unnecessary
+	 SIGN_EXTEND.  */
+      code = GET_CODE (op);
+      if ((code == CLRSB || code == CLZ
+	   || code == CTZ|| code == POPCOUNT
+	   || code == PARITY)
+	   && GET_MODE (op) != mode)
+	{
+		PUT_MODE (op, mode);
+		return op;
+	}
+
       /* We can canonicalize SIGN_EXTEND (op) as ZERO_EXTEND (op) when
          we know the sign bit of OP must be clear.  */
       if (val_signbit_known_clear_p (GET_MODE (op),
