commit 69c28ed032862d4905f9040fd6f3452034695711
Author: Jeff Law <jlaw@ventanamicro.com>
Date:   Tue May 6 14:45:24 2025 -0600

    Revert "tree-optimization/120031 - CTZ pattern matching fails a case"
    
    This reverts commit 5e363ffefaceb9ff8fdeeead247c8337538e01db.

diff --git a/gcc/match.pd b/gcc/match.pd
index ab496d923cc..a150de5184f 100644
--- a/gcc/match.pd
+++ b/gcc/match.pd
@@ -1123,9 +1123,9 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)
 #endif
 
 /* (nop_outer_cast)-(inner_cast)var -> -(outer_cast)(var)
-   If var is smaller in precision this is always safe for both doing
-   the negative in signed or unsigned as the value for undefined will not
-   show up.  Else it is safe if the negation is done in an unsigned type.
+   if var is smaller in precision.
+   This is always safe for both doing the negative in signed or unsigned
+   as the value for undefined will not show up.
    Note the outer cast cannot be a boolean type as the only valid values
    are 0,-1/1 (depending on the signedness of the boolean) and the negative
    is there to get the correct value.  */
@@ -1133,8 +1133,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)
  (convert (negate:s@1 (convert:s @0)))
  (if (INTEGRAL_TYPE_P (type)
       && tree_nop_conversion_p (type, TREE_TYPE (@1))
-      && (TYPE_PRECISION (type) > TYPE_PRECISION (TREE_TYPE (@0))
-	  || TYPE_UNSIGNED (type))
+      && TYPE_PRECISION (type) > TYPE_PRECISION (TREE_TYPE (@0))
       && TREE_CODE (type) != BOOLEAN_TYPE)
     (negate (convert @0))))
 
diff --git a/gcc/testsuite/gcc.target/i386/pr120031.c b/gcc/testsuite/gcc.target/i386/pr120031.c
deleted file mode 100644
index e329cbc2f54..00000000000
--- a/gcc/testsuite/gcc.target/i386/pr120031.c
+++ /dev/null
@@ -1,15 +0,0 @@
-/* { dg-do compile } */
-/* { dg-options "-O2 -mbmi" } */
-
-unsigned int
-ZSTD_countTrailingZeros32_fallback (unsigned int val)
-{
-  static const unsigned int DeBruijn[32]
-    = { 0, 1, 28, 2, 29, 14, 24, 3,
-	30, 22, 20, 15, 25, 17, 4, 8,
-	31, 27, 13, 23, 21, 19, 16, 7,
-	26, 12, 18, 6, 11, 5, 10, 9};
-  return DeBruijn[((unsigned int) ((val & -(int) val) * 0x077CB531U)) >> 27];
-}
-
-/* { dg-final { scan-assembler "tzcnt" } } */
