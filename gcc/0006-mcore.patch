

On Sun, Jun 8, 2025 at 1:56 PM H.J. Lu <hjl.tools@gmail.com> wrote:
>
> On Sat, Jun 7, 2025 at 5:10 AM H.J. Lu <hjl.tools@gmail.com> wrote:
>>
>> Ok, I'll take a look.
>>
>> H.J.
>>
>> On Fri, Jun 6, 2025, 9:43 PM Jeff Law <jeffreyalaw@gmail.com> wrote:
>>>
>>> mcore-elf:
>>>
>>> Tests that now fail, but worked before (1 tests):
>>>
>>> mcore-sim: gcc: gcc.dg/visibility-12.c (test for excess errors)
>>>
>>> It's tripping this assert:
>>>
>>>>       if (fndecl != NULL_TREE)
>>>>         {
>>>>           datum = XEXP (DECL_RTL (fndecl), 0);
>>>>           gcc_assert (datum != NULL_RTX
>>>>                       && GET_CODE (datum) == SYMBOL_REF);
>>>>         }
>>>
>>> It's ultimately probably an mcore port issue, but if you could take a
>>> look since you recently changed this code, it'd be appreciated.
>>>
>
> I got the same gcc_assert failure with r16-1040-g5ff48aabf76c89 which
> is before
>
> commit 2da641d01700907d600ff9027ecfc82500342428
> Author: H.J. Lu <hjl.tools@gmail.com>
> Date:   Sun Jun 1 09:29:48 2025 +0800
>
>     Move get_call_rtx_from to final.c
>

I opened:

https://gcc.gnu.org/bugzilla/show_bug.cgi?id=120589

Here is the patch.  Does it work for you?

-- 
H.J.


0001-mcore-Don-t-use-gen_rtx_MEM-on-__attribute__-dllimpo.patch

From c7150b16f66ecb8e74d008b4f71ce2f389365fb8 Mon Sep 17 00:00:00 2001
From: "H.J. Lu" <hjl.tools@gmail.com>
Date: Sun, 8 Jun 2025 14:23:09 +0800
Subject: [PATCH] mcore: Don't use gen_rtx_MEM on  __attribute__((dllimport))

On mcore-elf, mcore_mark_dllimport generated

(gdb) call debug_tree (decl)
 <function_decl 0x7fffe9941200 f1
    type <function_type 0x7fffe981f000
        type <void_type 0x7fffe98180a8 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fffe98180a8
            pointer_to_this <pointer_type 0x7fffe9818150>>
        HI
        size <integer_cst 0x7fffe9802738 constant 16>
        unit-size <integer_cst 0x7fffe9802750 constant 2>
        align:16 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fffe981f000
        arg-types <tree_list 0x7fffe980b988 value <void_type 0x7fffe98180a8 void>>
        pointer_to_this <pointer_type 0x7fffe991b0a8>>
    addressable used public external decl_5 SI /tmp/x.c:1:40 align:16 warn_if_not_align:0 context <translation_unit_decl 0x7fffe9955080 /tmp/x.c>
    attributes <tree_list 0x7fffe9932708
        purpose <identifier_node 0x7fffe9954000 dllimport>>
    (mem:SI (mem:SI (symbol_ref:SI ("@i.__imp_f1")) [0  S4 A32]) [0  S4 A32]) chain <function_decl 0x7fffe9941300 f2>>

which caused:

(gdb) bt
    file=0x2c0f1c8 "/export/gnu/import/git/sources/gcc-test/gcc/calls.cc",
    line=3746, function=0x2c0f747 "expand_call")
    at /export/gnu/import/git/sources/gcc-test/gcc/diagnostic.cc:1780
    target=0x0, ignore=1)
    at /export/gnu/import/git/sources/gcc-test/gcc/calls.cc:3746
...
(gdb) call debug_rtx (datum)
(mem:SI (symbol_ref:SI ("@i.__imp_f1")) [0  S4 A32])
(gdb)

Don't use gen_rtx_MEM in mcore_mark_dllimport to generate

(gdb) call debug_tree (fndecl)
 <function_decl 0x7fffe9941200 f1
    type <function_type 0x7fffe981f000
        type <void_type 0x7fffe98180a8 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fffe98180a8
            pointer_to_this <pointer_type 0x7fffe9818150>>
        HI
        size <integer_cst 0x7fffe9802738 constant 16>
        unit-size <integer_cst 0x7fffe9802750 constant 2>
        align:16 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fffe981f000
        arg-types <tree_list 0x7fffe980b988 value <void_type 0x7fffe98180a8 void>>
        pointer_to_this <pointer_type 0x7fffe991b0a8>>
    addressable used public external decl_5 SI /tmp/x.c:1:40 align:16 warn_if_not_align:0 context <translation_unit_decl 0x7fffe9955080 /tmp/x.c>
    attributes <tree_list 0x7fffe9932708
        purpose <identifier_node 0x7fffe9954000 dllimport>>
    (mem:SI (symbol_ref:SI ("@i.__imp_f1")) [0  S4 A32]) chain <function_decl 0x7fffe9941300 f2>>
(gdb)

instead.

	PR target/120589
	* config/mcore/mcore.cc (mcore_mark_dllimport): Don't use
	gen_rtx_MEM.

Signed-off-by: H.J. Lu <hjl.tools@gmail.com>
---
 gcc/config/mcore/mcore.cc | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/gcc/config/mcore/mcore.cc b/gcc/config/mcore/mcore.cc
index cd5f2c52649..c4fc145a47a 100644
--- a/gcc/config/mcore/mcore.cc
+++ b/gcc/config/mcore/mcore.cc
@@ -2984,9 +2984,7 @@ mcore_mark_dllimport (tree decl)
   /* ??? At least I think that's why we do this.  */
   idp = get_identifier (newname);
 
-  newrtl = gen_rtx_MEM (Pmode,
-		    gen_rtx_SYMBOL_REF (Pmode,
-			     IDENTIFIER_POINTER (idp)));
+  newrtl = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));
   XEXP (DECL_RTL (decl), 0) = newrtl;
 }
 
-- 
2.49.0



