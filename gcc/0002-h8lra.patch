diff --git a/gcc/config/h8300/h8300.cc b/gcc/config/h8300/h8300.cc
index c3674933f90..815267393cb 100644
--- a/gcc/config/h8300/h8300.cc
+++ b/gcc/config/h8300/h8300.cc
@@ -5625,9 +5625,6 @@ pre_incdec_with_reg (rtx op, unsigned int reg)
 #undef TARGET_MODES_TIEABLE_P
 #define TARGET_MODES_TIEABLE_P h8300_modes_tieable_p
 
-#undef TARGET_LRA_P
-#define TARGET_LRA_P hook_bool_void_false
-
 #undef TARGET_LEGITIMATE_ADDRESS_P
 #define TARGET_LEGITIMATE_ADDRESS_P	h8300_legitimate_address_p
 
diff --git a/gcc/config/h8300/logical.md b/gcc/config/h8300/logical.md
index f07c79e1eac..5df0922ef4e 100644
--- a/gcc/config/h8300/logical.md
+++ b/gcc/config/h8300/logical.md
@@ -31,28 +31,6 @@ (define_expand "<code><mode>3"
 ;; AND INSTRUCTIONS
 ;; ----------------------------------------------------------------------
 
-(define_insn "bclr<mode>_msx"
-  [(set (match_operand:QHI 0 "bit_register_indirect_operand" "=WU")
-	(and:QHI (match_operand:QHI 1 "bit_register_indirect_operand" "%0")
-		 (match_operand:QHI 2 "single_zero_operand" "Y0")))]
-  "TARGET_H8300SX && rtx_equal_p (operands[0], operands[1])"
-  "bclr\\t%W2,%0"
-  [(set_attr "length" "8")])
-
-(define_split
-  [(set (match_operand:HI 0 "bit_register_indirect_operand")
-	(and:HI (match_operand:HI 1 "bit_register_indirect_operand")
-		(match_operand:HI 2 "single_zero_operand")))]
-  "TARGET_H8300SX && abs (INTVAL (operands[2])) > 0xff"
-  [(set (match_dup 0)
-	(and:QI (match_dup 1)
-		(match_dup 2)))]
-  {
-    operands[0] = adjust_address (operands[0], QImode, 0);
-    operands[1] = adjust_address (operands[1], QImode, 0);
-    operands[2] = GEN_INT ((INTVAL (operands[2])) >> 8);
-  })
-
 (define_insn_and_split "*andqi3_2"
   [(set (match_operand:QI 0 "bit_operand" "=U,rQ,r")
 	(and:QI (match_operand:QI 1 "bit_operand" "%0,0,WU")
@@ -177,14 +155,6 @@ (define_insn "*andorsi3_shift_8_clobber_flags"
 ;; OR/XOR INSTRUCTIONS
 ;; ----------------------------------------------------------------------
 
-(define_insn "b<code><mode>_msx"
-  [(set (match_operand:QHI 0 "bit_register_indirect_operand" "=WU")
-	(ors:QHI (match_operand:QHI 1 "bit_register_indirect_operand" "%0")
-		 (match_operand:QHI 2 "single_one_operand" "Y2")))]
-  "TARGET_H8300SX && rtx_equal_p (operands[0], operands[1])"
-  { return <CODE> == IOR ? "bset\\t%V2,%0" : "bnot\\t%V2,%0"; }
-  [(set_attr "length" "8")])
-
 (define_insn_and_split "<code>qi3_1"
   [(set (match_operand:QI 0 "bit_operand" "=U,rQ")
 	(ors:QI (match_operand:QI 1 "bit_operand" "%0,0")
diff --git a/gcc/config/h8300/movepush.md b/gcc/config/h8300/movepush.md
index e536602a01d..70853f533c3 100644
--- a/gcc/config/h8300/movepush.md
+++ b/gcc/config/h8300/movepush.md
@@ -35,8 +35,8 @@ (define_insn "*movqi<cczn>"
   [(set (attr "length") (symbol_ref "compute_mov_length (operands)"))])
 
 (define_insn_and_split "*movqi_h8sx"
-  [(set (match_operand:QI 0 "general_operand_dst" "=Zz,rQ")
-	(match_operand:QI 1 "general_operand_src" "P4>X,rQi"))]
+  [(set (match_operand:QI 0 "general_operand_dst" "=rQ")
+	(match_operand:QI 1 "general_operand_src" "rQi"))]
   "TARGET_H8300SX"
   "#"
   "&& reload_completed"
@@ -44,14 +44,13 @@ (define_insn_and_split "*movqi_h8sx"
 	      (clobber (reg:CC CC_REG))])])
 
 (define_insn "*movqi_h8sx<cczn>"
-  [(set (match_operand:QI 0 "general_operand_dst" "=Zz,rQ")
-	(match_operand:QI 1 "general_operand_src" "P4>X,rQi"))
+  [(set (match_operand:QI 0 "general_operand_dst" "=rQ")
+	(match_operand:QI 1 "general_operand_src" "rQi"))
    (clobber (reg:CC CC_REG))]
   "TARGET_H8300SX"
   "@
-    mov.b	%X1:4,%X0
     mov.b	%X1,%X0"
-  [(set_attr "length_table" "mov_imm4,movb")])
+  [(set_attr "length_table" "movb")])
 
 (define_expand "mov<mode>"
   [(set (match_operand:QHSIF 0 "general_operand_dst" "")
@@ -127,8 +126,8 @@ (define_insn "*movhi<cczn>"
   [(set (attr "length") (symbol_ref "compute_mov_length (operands)"))])
 
 (define_insn_and_split "*movhi_h8sx"
-  [(set (match_operand:HI 0 "general_operand_dst" "=r,r,Zz,Q,rQ")
-	(match_operand:HI 1 "general_operand_src" "I,P3>X,P4>X,IP8>X,rQi"))]
+  [(set (match_operand:HI 0 "general_operand_dst" "=r,r,Q,rQ")
+	(match_operand:HI 1 "general_operand_src" "I,P3>X,IP8>X,rQi"))]
   "TARGET_H8300SX"
   "#"
   "&& reload_completed"
@@ -136,18 +135,17 @@ (define_insn_and_split "*movhi_h8sx"
 	      (clobber (reg:CC CC_REG))])])
   
 (define_insn "*movhi_h8sx<cczn>"
-  [(set (match_operand:HI 0 "general_operand_dst" "=r,r,Zz,Q,rQ")
-	(match_operand:HI 1 "general_operand_src" "I,P3>X,P4>X,IP8>X,rQi"))
+  [(set (match_operand:HI 0 "general_operand_dst" "=r,r,Q,rQ")
+	(match_operand:HI 1 "general_operand_src" "I,P3>X,IP8>X,rQi"))
    (clobber (reg:CC CC_REG))]
   "TARGET_H8300SX"
   "@
    sub.w	%T0,%T0
    mov.w	%T1:3,%T0
-   mov.w	%T1:4,%T0
    mov.w	%T1,%T0
    mov.w	%T1,%T0"
-  [(set_attr "length_table" "*,*,mov_imm4,short_immediate,movw")
-   (set_attr "length" "2,2,*,*,*")])
+  [(set_attr "length_table" "*,*,short_immediate,movw")
+   (set_attr "length" "2,2,*,*")])
 
 (define_insn_and_split "movstricthi"
   [(set (strict_low_part (match_operand:HI 0 "general_operand_dst" "+r,r,r"))
