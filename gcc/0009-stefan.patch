diff --git a/gcc/tree-loop-distribution.c b/gcc/tree-loop-distribution.c
index fb9250031b5..c159ba143bd 100644
--- a/gcc/tree-loop-distribution.c
+++ b/gcc/tree-loop-distribution.c
@@ -3430,7 +3430,7 @@ generate_strlen_builtin_using_rawmemchr (loop_p loop, tree reduction_var,
 static bool
 reduction_var_overflows_first (tree reduction_var, tree load_type)
 {
-  widest_int n2 = wi::lshift (1, TYPE_PRECISION (reduction_var));;
+  widest_int n2 = wi::lshift (1, TYPE_PRECISION (TREE_TYPE (reduction_var)));
   widest_int m2 = wi::lshift (1, TYPE_PRECISION (ptrdiff_type_node) - 1);
   widest_int s = wi::to_widest (TYPE_SIZE_UNIT (load_type));
   return wi::ltu_p (n2, wi::udiv_trunc (m2, s));
@@ -3681,7 +3681,7 @@ loop_distribution::transform_reduction_loop (loop_p loop)
 	  && ((TYPE_PRECISION (sizetype) >= TYPE_PRECISION (ptr_type_node) - 1
 	       && TYPE_PRECISION (ptr_type_node) >= 32)
 	      || (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (reduction_var))
-		  && TYPE_PRECISION (reduction_var) <= TYPE_PRECISION (sizetype)))
+		  && TYPE_PRECISION (TREE_TYPE (reduction_var)) <= TYPE_PRECISION (sizetype)))
 	  && builtin_decl_implicit (BUILT_IN_STRLEN))
 	generate_strlen_builtin (loop, reduction_var, load_iv.base,
 				 reduction_iv.base, loc);
