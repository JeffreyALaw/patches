diff --git a/gcc/ext-dce.cc b/gcc/ext-dce.cc
index 4a2503f1831..d10de893b88 100644
--- a/gcc/ext-dce.cc
+++ b/gcc/ext-dce.cc
@@ -557,7 +557,10 @@ carry_backpropagate (unsigned HOST_WIDE_INT mask, enum rtx_code code, rtx x)
       return mmask;
 
     case SIGN_EXTEND:
-      if (mask & ~GET_MODE_MASK (GET_MODE_INNER (GET_MODE (XEXP (x, 0)))))
+      /* We want the mode of the inner object.  We need to ensure its
+	 sign bit is on in MASK.  */
+      mode = GET_MODE (XEXP (x, 0));
+      if (mask & ~GET_MODE_MASK (GET_MODE_INNER (mode)))
 	mask |= 1ULL << (GET_MODE_BITSIZE (mode).to_constant () - 1);
       return mask;
 
@@ -670,6 +673,8 @@ ext_dce_process_uses (rtx_insn *insn, rtx obj,
 	      if (skipped_dest)
 		dst_mask = -1;
 
+	      dst_mask = carry_backpropagate (dst_mask, code, src);
+
 	      /* ??? Could also handle ZERO_EXTRACT / SIGN_EXTRACT
 		 of the source specially to improve optimization.  */
 	      if (code == SIGN_EXTEND || code == ZERO_EXTEND)
@@ -696,9 +701,7 @@ ext_dce_process_uses (rtx_insn *insn, rtx obj,
 
 	      /* Optimization is done at this point.  We just want to make
 		 sure everything that should get marked as live is marked
-		 from here onward.  Shouldn't the backpropagate step happen
-		 before optimization?  */
-	      dst_mask = carry_backpropagate (dst_mask, code, src);
+		 from here onward.  */
 
 	      /* We will handle the other operand of a binary operator
 		 at the bottom of the loop by resetting Y.  */
