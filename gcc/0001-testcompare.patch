commit 58a4a34cc58c0a5179a1ce76ba225092687e1102
Author: Jeff Law <jlaw@ventanamicro.com>
Date:   Wed Sep 10 07:13:35 2025 -0600

    Revert "compare_tests: Improve non-unique tests report"
    
    This reverts commit 21d4a0b08a6883763ccdf9ce1d1ff1dedd6240a2.
    
    Revert "compare_tests: Report non-unique test names"
    
    This reverts commit 750346a763df2573ea4c8a8dde8cddced64f69a5.

diff --git a/contrib/compare_tests b/contrib/compare_tests
index 8efd15e903f..e09fc4f113a 100755
--- a/contrib/compare_tests
+++ b/contrib/compare_tests
@@ -41,8 +41,6 @@ tmp1=$TMPDIR/$tool-testing.$$a
 tmp2=$TMPDIR/$tool-testing.$$b
 now_s=$TMPDIR/$tool-testing.$$d
 before_s=$TMPDIR/$tool-testing.$$e
-now_u=$TMPDIR/$tool-uniq.$$d
-before_u=$TMPDIR/$tool-uniq.$$e
 lst1=$TMPDIR/$tool-lst1.$$
 lst2=$TMPDIR/$tool-lst2.$$
 lst3=$TMPDIR/$tool-lst3.$$
@@ -50,7 +48,7 @@ lst4=$TMPDIR/$tool-lst4.$$
 lst5=$TMPDIR/$tool-lst5.$$
 sum1=$TMPDIR/$tool-sum1.$$
 sum2=$TMPDIR/$tool-sum2.$$
-tmps="$tmp1 $tmp2 $now_s $before_s $now_u $before_u $lst1 $lst2 $lst3 $lst4 $lst5 $sum1 $sum2"
+tmps="$tmp1 $tmp2 $now_s $before_s $lst1 $lst2 $lst3 $lst4 $lst5 $sum1 $sum2"
 
 [ "$1" = "-strict" ] && strict=$1 && shift
 [ "$1" = "-?" ] && usage
@@ -126,36 +124,6 @@ fi
 sort -t ':' $skip1 "$now" > "$now_s"
 sort -t ':' $skip1 "$before" > "$before_s"
 
-# Report non-unique test names and print the diff between the two
-# lists if they are different.
-#
-# If the results include several configurations (schedule of
-# variations), we report duplicates several times with different
-# target/tool prefixes because at this stage we do not know if the
-# target and/or tool prefix was inserted.
-# If we used the input files (so generally several times the same
-# results in one section per target), we would incorreclty detect
-# duplicates (as many as targets)
-grep -E '^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED|UNSUPPORTED|UNTESTED|ERROR):' "$now_s"    | uniq -cd > "$now_u"
-grep -E '^(PASS|XPASS|FAIL|XFAIL|UNRESOLVED|UNSUPPORTED|UNTESTED|ERROR):' "$before_s" | uniq -cd > "$before_u"
-
-same_uniq=" now"
-cmp -s "$before_u" "$now_u" && same_uniq=""
-
-if [ -s "$now_u" ]; then
-    echo "Non-unique test names$same_uniq: (Eeek!)"
-    cat "$now_u"
-    echo
-    exit_status=1
-fi
-
-if [ -s "$before_u" -a "x$same_uniq" != "x" ]; then
-    echo "Changes to non-unique test names:"
-    diff -u "$before_u" "$now_u" | grep -E '^[-\\+] '
-    echo
-    exit_status=1
-fi
-
 grep '^FAIL:' "$now_s" | sed 's/^[^:]*:[ 	]//' >$tmp1
 grep '^PASS' "$before_s" | sed 's/^[^:]*:[ 	]//' | comm -12 $tmp1 - >$tmp2
 
diff --git a/contrib/compare_tests b/contrib/compare_tests
index e09fc4f113a..2680c98578b 100755
--- a/contrib/compare_tests
+++ b/contrib/compare_tests
@@ -108,8 +108,8 @@ elif [ -d "$1" -o -d "$2" ] ; then
 	usage "Must specify either two directories or two files"
 fi
 
-sed 's/^XFAIL/FAIL/; s/^ERROR/FAIL/; s/^XPASS/PASS/' < "$1" | awk '/^[	 ]*=== [^ ]* tests ===$/ {tool = $2} /^Running target / {target = $3} { if (tool != "") { sub(/:[ 	]/, "&"tool": " ); }; if (target != "unix") { sub(/:[ 	]/, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp1
-sed 's/^XFAIL/FAIL/; s/^ERROR/FAIL/; s/^XPASS/PASS/' < "$2" | awk '/^[	 ]*=== [^ ]* tests ===$/ {tool = $2} /^Running target / {target = $3} { if (tool != "") { sub(/:[ 	]/, "&"tool": " ); }; if (target != "unix") { sub(/:[ 	]/, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp2
+sed 's/^XFAIL/FAIL/; s/^XPASS/PASS/' < "$1" | awk '/^[	 ]*=== [^ ]* tests ===$/ {tool = $2} /^Running target / {target = $3} { if (tool != "") { sub(/:[ 	]/, "&"tool": " ); }; if (target != "unix") { sub(/:[ 	]/, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp1
+sed 's/^XFAIL/FAIL/; s/^XPASS/PASS/' < "$2" | awk '/^[	 ]*=== [^ ]* tests ===$/ {tool = $2} /^Running target / {target = $3} { if (tool != "") { sub(/:[ 	]/, "&"tool": " ); }; if (target != "unix") { sub(/:[ 	]/, "&"target": " ); }; print $0; }' | cut -c1-2000 >$tmp2
 
 before=$tmp1
 now=$tmp2
@@ -159,8 +159,8 @@ if [ $? = 0 ]; then
 	echo "New tests that FAIL ($num tests):"
 	echo
 	cat $tmp2
+	[ -n "$strict" ] && echo "Strict test fails" && exit_status=1
 	echo
-	exit_status=1
 fi
 
 grep '^PASS' "$now_s" | sed 's/^[^:]*:[ 	]//' >$tmp1
