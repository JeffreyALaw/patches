diff --git a/gcc/config/riscv/riscv.md b/gcc/config/riscv/riscv.md
index 6d3c80a04c7..44df73f8b08 100644
--- a/gcc/config/riscv/riscv.md
+++ b/gcc/config/riscv/riscv.md
@@ -892,10 +892,9 @@ (define_insn_and_split "*lui_constraint<X:mode>_and_to_or"
   "(LUI_OPERAND (~INTVAL (operands[2]))
     && ((INTVAL (operands[2]) & (-INTVAL (operands[3])))
 	== (-INTVAL (operands[3])))
-    && riscv_const_insns (operands[3], false)
+    && riscv_const_insns (operands[3], false) >= 2
     && (riscv_const_insns (GEN_INT (~INTVAL (operands[2])
-				    | -INTVAL (operands[3])), false)
-	<= riscv_const_insns (operands[3], false)))"
+				    | -INTVAL (operands[3])), false) == 1))"
   "#"
   "&& reload_completed"
   [(set (match_dup 4) (match_dup 5))
diff --git a/gcc/testsuite/gcc.target/riscv/ventana-16122.c b/gcc/testsuite/gcc.target/riscv/ventana-16122.c
new file mode 100644
index 00000000000..59e6467b57c
--- /dev/null
+++ b/gcc/testsuite/gcc.target/riscv/ventana-16122.c
@@ -0,0 +1,19 @@
+/* { dg-do compile { target { rv64 } } } */
+
+extern void NG (void);
+typedef signed char int8_t;
+typedef signed short int16_t;
+typedef signed int int32_t;
+void f74(void) {
+    	int16_t x309 = 0x7fff;
+	volatile int32_t x310 = 0x7fffffff;
+	int8_t x311 = 59;
+	int16_t x312 = -0x8000;
+	static volatile int32_t t74 = 614992577;
+
+    t74 = (x309==((x310^x311)%x312));
+
+    if (t74 != 0) { NG(); } else { ; }
+	
+}
+
